{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage4",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureBlobStorage4",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Index as integer,",
				"          {User Id} as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Sex as string,",
				"          Email as string,",
				"          Phone as string,",
				"          {Date of birth} as date,",
				"          {Job Title} as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'adfdemo',",
				"     folderPath: 'input',",
				"     fileName: 'people-100 - Copy.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     container: 'adfdemo',",
				"     folderPath: 'OUTPUT',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     partitionFileNames:['outputofinline.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Index,",
				"          {User Id},",
				"          {First Name},",
				"          {Last Name},",
				"          Sex,",
				"          Email,",
				"          Phone,",
				"          {Date of birth},",
				"          {Job Title}",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}